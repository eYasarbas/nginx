user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    client_max_body_size 20M;

    # CORS Whitelist
    map $http_origin $cors_origin {
        default                                 "";
        "~^https?://localhost(:[0-9]+)?$"       $http_origin;
        "~^https?://217\.18\.209\.111(:[0-9]+)?$" $http_origin;
    }

    # Global proxy header'ları
    proxy_http_version 1.1;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Connection        "";

    # Upstream tanımı
    upstream qr_spring_app {
        server qr-spring-app:9090;
        keepalive 16;
    }

    server {
        listen       80;
        server_name  217.18.209.111;

        root   /usr/share/nginx/html;
        index  index.html;

        # CORS başlıkları
        add_header Access-Control-Allow-Origin  $cors_origin always;
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Accept, X-Requested-With' always;
        add_header Access-Control-Allow-Credentials 'true' always;

        # 1) /api ön eki altındaki tüm istekler (GET/POST/DELETE...) ve OPTIONS preflight
        location ^~ /api/ {
            if ($request_method = OPTIONS) {
                add_header Content-Length 0;
                add_header Content-Type   text/plain;
                return 204;
            }
            proxy_pass http://qr_spring_app$request_uri;
        }

        # 2) Actuator uç noktaları (health + diğerleri)
        location ^~ /actuator/ {
            proxy_pass http://qr_spring_app$request_uri;
        }

        # 3) Swagger UI & OpenAPI spec
        location ^~ /swagger-ui/ {
            proxy_pass http://qr_spring_app$request_uri;
        }
        location ^~ /v3/api-docs {
            proxy_pass http://qr_spring_app$request_uri;
        }

        # 4) React SPA fallback
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 404 geldiğinde React'e döndür
        error_page 404 /index.html;
    }
}
