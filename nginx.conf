events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Nginx sürüm bilgisini gizle
    server_tokens off;

    # Access log formatı
    log_format custom_log '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         'ssl_protocol=$ssl_protocol ssl_cipher=$ssl_cipher';

    # SSL yapılandırması
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_buffer_size 4k;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_ecdh_curve secp384r1;
    ssl_stapling_file /etc/nginx/ssl/stapling.ocsp;
    ssl_trusted_certificate /etc/nginx/ssl/trusted.crt;

    # Güvenlik başlıkları
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' https://217.18.209.111; frame-ancestors 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # CORS ayarları - IP tabanlı
    map $http_origin $cors_origin {
        default "";
        "https://217.18.209.111" "$http_origin";
        "http://217.18.209.111" "$http_origin";
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # HTTP'den HTTPS'e yönlendirme
    server {
        listen 80;
        server_name 217.18.209.111;
        return 301 https://$host$request_uri;
    }

    # Ana HTTPS sunucusu - Frontend
    server {
        listen 443 ssl http2;
        server_name 217.18.209.111;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;
        ssl_stapling_file /etc/nginx/ssl/stapling.ocsp;

        access_log /var/log/nginx/access.log custom_log;
        error_log /var/log/nginx/error.log;
        limit_conn addr 10;

        # Frontend için ana sayfa
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            include /etc/nginx/conf.d/cors.conf;
        }

        # API isteklerini Spring Boot'a yönlendir
        location /api {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://spring-boot-app:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            include /etc/nginx/conf.d/cors.conf;
        }

        # Auth endpoint'i için özel yapılandırma
        location /auth {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://spring-boot-app:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            include /etc/nginx/conf.d/cors.conf;
        }

        # Swagger UI için özel path
        location /swagger {
            # Sadece geliştirici IP'lerinden gelen isteklere izin ver
            allow 217.18.209.111;
            deny all;
            
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://spring-boot-app:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
